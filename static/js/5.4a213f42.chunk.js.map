{"version":3,"sources":["hooks/title.ts","helpers/payload.ts","helpers/time.ts","hooks/dimensions.ts","components/Seekbar/index.tsx","components/Player/index.tsx","components/Compilation/index.tsx"],"names":["useTitle","title","opts","useEffect","document","replace","hyphen","decode","encodedPayload","JSON","parse","atob","replacer","_","val","toFixed","Number","encode","payloadObj","btoa","stringify","formatDuration","memoize","length","Error","forceMinutes","Math","floor","toString","padStart","useDimensions","ref","useRef","useState","dimensions","setDimensions","resizeObserver","useMemo","ResizeObserver","entry","contentRect","toJSON","scrollWidth","current","useLayoutEffect","observe","unobserve","Seekbar","props","seekbar","zoomed","lefts","setLefts","seekbarRef","seekbarDimensions","zoomedRef","zoomedDimensions","onHover","x","seekbarLength","width","value","cappedValue","max","min","className","clips","map","clip","isActive","currentClip","video","videoID","clipID","style","flexGrow","left","progress","bounds","onMouseMove","e","rect","target","getBoundingClientRect","clientX","onTouchMove","touches","index","onClick","onClipChange","Player","playlist","setProgress","playerRef","setCurrentClip","ready","setReady","useCallback","request","onProgress","playedSeconds","getInternalPlayer","pauseVideo","seekTo","playing","url","progressInterval","light","height","config","youtube","playerVars","autoplay","modestbranding","start","end","Compilation","encodedData","useParams","data","payload","Object","entries","flatMap","reduce","a","b","author"],"mappings":"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","file":"static/js/5.4a213f42.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\n\r\ninterface TitleHookOpts {\r\n  hyphen?: boolean;\r\n  replace?: boolean;\r\n}\r\n\r\nexport default function useTitle(title?: string, opts: TitleHookOpts = {}) {\r\n  useEffect(() => {\r\n    document.title = !!title\r\n      ? (opts.replace ? \"\" : \"Bestoff \" + (opts.hyphen ? \"- \" : \"\")) + title\r\n      : \"Bestoff\";\r\n  }, [title, opts.hyphen, opts.replace]);\r\n}\r\n","import { ICompilation } from \"types\";\n\nexport function decode(encodedPayload: string): ICompilation {\n  return JSON.parse(atob(encodedPayload.replace(/_/g, \"/\").replace(/-/g, \"+\")));\n}\n\nconst replacer = (_: any, val: any) => {\n  return val.toFixed ? Number(val.toFixed(3)) : val;\n};\n\nexport function encode(payloadObj: object): string {\n  return btoa(JSON.stringify(payloadObj, replacer))\n    .replace(/\\//g, \"_\")\n    .replace(/\\+/g, \"-\");\n}\n","import { memoize } from \"lodash\";\r\n\r\ninterface FormatDurationOpts {\r\n  forceMinutes?: boolean;\r\n}\r\n\r\nexport const formatDuration = memoize(function formatDuration(\r\n  length: number,\r\n  opts: FormatDurationOpts = {}\r\n): string {\r\n  if (length < 0) {\r\n    throw new Error(\"Negative number are not supported\");\r\n  }\r\n\r\n  if (length < 60 && !opts.forceMinutes) {\r\n    return Math.floor(length).toString().padStart(2, \"0\") + \"s\";\r\n  }\r\n\r\n  if (length < 3600) {\r\n    return (\r\n      Math.floor(length / 60)\r\n        .toString()\r\n        .padStart(2, \"0\") +\r\n      \"m\" +\r\n      formatDuration(length % 60)\r\n    );\r\n  }\r\n\r\n  return (\r\n    Math.floor(length / 3600) +\r\n    \"h\" +\r\n    formatDuration(length % 3600, { forceMinutes: true })\r\n  );\r\n});\r\n","import {\n  useRef,\n  useState,\n  MutableRefObject,\n  useLayoutEffect,\n  useMemo,\n} from \"react\";\n\ntype ExtendedDOMRect = DOMRectReadOnly & { scrollWidth?: number };\n\nexport default function useDimensions<T extends HTMLElement>(): [\n  MutableRefObject<any>,\n  ExtendedDOMRect | null\n] {\n  const ref = useRef<T>(null);\n  const [dimensions, setDimensions] = useState<ExtendedDOMRect | null>(null);\n\n  const resizeObserver = useMemo(\n    () =>\n      new ResizeObserver(([entry]) =>\n        setDimensions({\n          ...entry.contentRect.toJSON(),\n          scrollWidth: ref.current?.scrollWidth,\n        })\n      ),\n    [setDimensions]\n  );\n\n  useLayoutEffect(() => {\n    const current = ref.current; // enclose current so the reference can be used in the unsubscribe\n    if (current) {\n      resizeObserver.observe(current);\n      return () => resizeObserver.unobserve(current);\n    }\n\n    return undefined;\n  }, [resizeObserver]);\n\n  return [ref, dimensions];\n}\n","import React, { useState } from \"react\";\r\nimport { IClip, ISelectedClip } from \"types\";\r\nimport useDimensions from \"hooks/dimensions\";\r\nimport \"./style.css\";\r\n\r\ninterface SeekbarProps {\r\n  clips: Array<IClip>;\r\n  currentClip: ISelectedClip;\r\n  onClipChange: (clip: ISelectedClip) => unknown;\r\n  progress: number;\r\n}\r\n\r\nexport default function Seekbar(props: SeekbarProps) {\r\n  const [lefts, setLefts] = useState<{ seekbar: number; zoomed: number }>({\r\n    seekbar: 0,\r\n    zoomed: 0,\r\n  });\r\n  const [seekbarRef, seekbarDimensions] = useDimensions();\r\n  const [zoomedRef, zoomedDimensions] = useDimensions();\r\n\r\n  const onHover = (x: number) => {\r\n    if (\r\n      !seekbarDimensions ||\r\n      !zoomedDimensions ||\r\n      !zoomedDimensions.scrollWidth\r\n    ) {\r\n      setLefts({ seekbar: 0, zoomed: 0 });\r\n      return;\r\n    }\r\n    const seekbarLength =\r\n      seekbarDimensions.width / zoomedDimensions.scrollWidth;\r\n    const value = x / seekbarDimensions.width - seekbarLength / 2;\r\n    const cappedValue = Math.max(0, Math.min(1 - seekbarLength, value));\r\n    setLefts({ seekbar: cappedValue, zoomed: value });\r\n  };\r\n\r\n  const onMouseMove = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    const rect = (e.target as HTMLDivElement).getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n\r\n    onHover(x);\r\n  };\r\n\r\n  const onTouchMove = (e: React.TouchEvent<HTMLDivElement>) => {\r\n    const rect = (e.touches[0]\r\n      .target as HTMLDivElement).getBoundingClientRect();\r\n    const x = e.touches[0].clientX - rect.left;\r\n\r\n    onHover(x);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Seekbar\" ref={seekbarRef}>\r\n      <div className=\"Seekbar--main-wrapper\">\r\n        <div className=\"Seekbar--main\">\r\n          {props.clips.map((clip) => {\r\n            const isActive =\r\n              props.currentClip.video === clip.videoID &&\r\n              props.currentClip.clip === clip.clipID;\r\n            return (\r\n              <div\r\n                key={clip.videoID + \"_\" + clip.clipID}\r\n                className={\r\n                  \"Seekbar--clip\" + (isActive ? \" Seekbar--clip-active\" : \"\")\r\n                }\r\n                style={{ flexGrow: clip.length }}\r\n              >\r\n                {isActive && (\r\n                  <div\r\n                    style={{\r\n                      left:\r\n                        Math.min(\r\n                          1,\r\n                          Math.max(\r\n                            0,\r\n                            (props.progress - clip.bounds[0]) / clip.length\r\n                          )\r\n                        ) *\r\n                          100 +\r\n                        \"%\",\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div\r\n          className=\"Seekbar--move\"\r\n          onMouseMove={onMouseMove}\r\n          onTouchMove={onTouchMove}\r\n        />\r\n        <div className=\"Seekbar--hover\">\r\n          <div\r\n            style={{\r\n              left: lefts.seekbar * 100 + \"%\",\r\n              width:\r\n                seekbarDimensions && zoomedDimensions?.scrollWidth\r\n                  ? (seekbarDimensions.width / zoomedDimensions.scrollWidth) *\r\n                      100 +\r\n                    \"%\"\r\n                  : \"10%\",\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"Seekbar--zoomed\">\r\n        <div>\r\n          <div\r\n            className=\"Seekbar--zoomed-inner\"\r\n            style={{\r\n              left:\r\n                seekbarDimensions && zoomedDimensions?.scrollWidth\r\n                  ? -lefts.zoomed *\r\n                      (zoomedDimensions.scrollWidth / seekbarDimensions.width) *\r\n                      100 +\r\n                    \"%\"\r\n                  : \"0%\",\r\n            }}\r\n            ref={zoomedRef}\r\n          >\r\n            {props.clips.map((clip, index) => (\r\n              <div\r\n                key={clip.videoID + \"_\" + clip.clipID}\r\n                className={\r\n                  \"Seekbar--zoomed-clip\" +\r\n                  (props.currentClip.video === clip.videoID &&\r\n                  props.currentClip.clip === clip.clipID\r\n                    ? \" Seekbar--zoomed-clip-active\"\r\n                    : \"\")\r\n                }\r\n                style={{ width: clip.length * 3 + \"px\" }}\r\n                onClick={() =>\r\n                  props.onClipChange({ video: clip.videoID, clip: clip.clipID })\r\n                }\r\n              >\r\n                <div>#{index + 1}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useCallback, useRef } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { IClip, IPlaylist, ISelectedClip, Entries } from \"types\";\r\nimport Seekbar from \"components/Seekbar\";\r\nimport \"./style.css\";\r\n\r\ninterface PlayerProps {\r\n  playlist: Entries<IPlaylist>;\r\n  clips: Array<IClip>;\r\n}\r\n\r\nexport function Player(props: PlayerProps) {\r\n  const { playlist, clips } = props;\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const playerRef = useRef<ReactPlayer>(null);\r\n  const [currentClip, setCurrentClip] = useState<ISelectedClip>({\r\n    video: 0,\r\n    clip: 0,\r\n  });\r\n  const [ready, setReady] = useState<boolean>(false);\r\n\r\n  const onClipChange = useCallback(\r\n    (request: ISelectedClip) => {\r\n      setCurrentClip(request);\r\n      setReady(false);\r\n    },\r\n    [setCurrentClip, setReady]\r\n  );\r\n\r\n  const onProgress = useCallback(\r\n    ({ playedSeconds }: { playedSeconds: number }) => {\r\n      setProgress(playedSeconds);\r\n\r\n      if (!ready) {\r\n        if (\r\n          playedSeconds >=\r\n            playlist[currentClip.video][1][currentClip.clip][0] &&\r\n          playedSeconds < playlist[currentClip.video][1][currentClip.clip][1]\r\n        ) {\r\n          setReady(true);\r\n        } else {\r\n          playerRef.current?.seekTo(\r\n            playlist[currentClip.video][1][currentClip.clip][0]\r\n          );\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (\r\n        !ready ||\r\n        playedSeconds < playlist[currentClip.video][1][currentClip.clip][1]\r\n      )\r\n        return;\r\n\r\n      if (currentClip.clip + 1 >= playlist[currentClip.video][1].length) {\r\n        if (currentClip.video + 1 >= playlist.length) {\r\n          (playerRef.current?.getInternalPlayer() as any)?.pauseVideo();\r\n          return;\r\n        }\r\n\r\n        setCurrentClip({ video: currentClip.video + 1, clip: 0 });\r\n        setReady(false);\r\n        return;\r\n      }\r\n\r\n      setCurrentClip({ ...currentClip, clip: currentClip.clip + 1 });\r\n      setReady(false);\r\n    },\r\n    [setProgress, ready, setReady, currentClip, playlist]\r\n  );\r\n\r\n  return (\r\n    <div className=\"Player\">\r\n      <div className=\"Player--embed\">\r\n        <ReactPlayer\r\n          ref={playerRef}\r\n          playing={true}\r\n          url={\"https://youtube.com/watch?v=\" + playlist[currentClip.video][0]}\r\n          progressInterval={16}\r\n          onProgress={onProgress}\r\n          light={true}\r\n          width={\"100%\"}\r\n          height={\"100%\"}\r\n          config={{\r\n            youtube: {\r\n              playerVars: {\r\n                autoplay: 1,\r\n                modestbranding: 1,\r\n                start: playlist[currentClip.video][1][currentClip.clip][0],\r\n                end: playlist[currentClip.video][1][currentClip.clip][1],\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"Player--seekbar\">\r\n        <Seekbar\r\n          clips={clips}\r\n          currentClip={currentClip}\r\n          onClipChange={onClipChange}\r\n          progress={progress}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ICompilation, IClip } from \"types\";\r\nimport { formatDuration } from \"helpers/time\";\r\nimport { decode } from \"helpers/payload\";\r\nimport useTitle from \"hooks/title\";\r\nimport { Player } from \"components/Player\";\r\nimport \"./style.css\";\r\n\r\ninterface CompilationParams {\r\n  data: string;\r\n}\r\n\r\nexport default function Compilation() {\r\n  const { data: encodedData } = useParams<CompilationParams>();\r\n\r\n  const payload: ICompilation = useMemo(() => decode(encodedData), [\r\n    encodedData,\r\n  ]);\r\n\r\n  useTitle(payload.data.title, { hyphen: true });\r\n\r\n  const playlist = useMemo(() => Object.entries(payload.data.playlist), [\r\n    payload,\r\n  ]);\r\n\r\n  const clips: Array<IClip> = useMemo(\r\n    () =>\r\n      playlist.flatMap(([, clips], videoID) =>\r\n        clips.map((bounds, clipID) => ({\r\n          videoID,\r\n          clipID,\r\n          bounds,\r\n          length: bounds[1] - bounds[0],\r\n        }))\r\n      ),\r\n    [playlist]\r\n  );\r\n\r\n  const length: number = useMemo(\r\n    () => clips.map((clip) => clip.length).reduce((a, b) => a + b),\r\n    [clips]\r\n  );\r\n\r\n  return (\r\n    <div className=\"Compilation global--wrapper\">\r\n      <h2>{payload.data.title}</h2>\r\n\r\n      <p>\r\n        <span>{formatDuration(length)}</span> long compilation with{\" \"}\r\n        <span>{clips.length} clips</span> across{\" \"}\r\n        <span>{playlist.length} videos</span> by{\" \"}\r\n        <span>{payload.data.author}</span>\r\n      </p>\r\n\r\n      <Player playlist={playlist} clips={clips} />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}