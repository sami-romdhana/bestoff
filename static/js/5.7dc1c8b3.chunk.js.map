{"version":3,"sources":["hooks/title.ts","helpers/payload.ts","helpers/time.ts","hooks/input.ts","components/Editor/Playlist.tsx","components/Editor/Cutter.tsx","components/Editor/index.tsx"],"names":["useTitle","title","opts","useEffect","document","replace","hyphen","decode","encodedPayload","JSON","parse","atob","replacer","_","val","toFixed","Number","encode","payloadObj","btoa","stringify","formatDuration","memoize","length","Error","forceMinutes","Math","floor","toString","padStart","useInput","defaultValue","useState","value","setValue","onChange","e","target","inputProps","Playlist","props","entries","setVideo","skipTo","map","video","clips","PlaylistVideoClips","expanded","setExpanded","className","key","onClick","clip","Cutter","youtubeID","setStart","setEnd","clipStart","clipEnd","done","disabled","Editor","history","useHistory","encodedData","useParams","data","payload","useMemo","titleInput","author","authorInput","youtubeURL","youtubeInput","setYouTubeURL","url","match","YOUTUBE_URL_REGEX","getYoutubeIDFromURL","playerRef","useRef","setClipStart","setClipEnd","playlist","setPlaylist","playlistEntries","Object","useCallback","current","getCurrentTime","alert","obj","newPlaylist","push","sort","a","b","undefined","currentPayload","version","currentURL","window","location","protocol","host","id","to","seekTo","getInternalPlayer","playVideo","ref","controls","width","height","config","youtube","playerVars","showinfo","type","placeholder","readOnly"],"mappings":"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","file":"static/js/5.7dc1c8b3.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\n\r\ninterface TitleHookOpts {\r\n  hyphen?: boolean;\r\n  replace?: boolean;\r\n}\r\n\r\nexport default function useTitle(title?: string, opts: TitleHookOpts = {}) {\r\n  useEffect(() => {\r\n    document.title = !!title\r\n      ? (opts.replace ? \"\" : \"Bestoff \" + (opts.hyphen ? \"- \" : \"\")) + title\r\n      : \"Bestoff\";\r\n  }, [title, opts.hyphen, opts.replace]);\r\n}\r\n","export function decode(encodedPayload: string) {\n  return JSON.parse(atob(encodedPayload.replace(/_/g, \"/\").replace(/-/g, \"+\")));\n}\n\nconst replacer = (_: any, val: any) => {\n  return val.toFixed ? Number(val.toFixed(3)) : val;\n};\n\nexport function encode(payloadObj: object) {\n  return btoa(JSON.stringify(payloadObj, replacer))\n    .replace(/\\//g, \"_\")\n    .replace(/\\+/g, \"-\");\n}\n","import { memoize } from \"lodash\";\r\n\r\ninterface FormatDurationOpts {\r\n  forceMinutes?: boolean;\r\n}\r\n\r\nexport const formatDuration = memoize(function formatDuration(\r\n  length: number,\r\n  opts: FormatDurationOpts = {}\r\n): string {\r\n  if (length < 0) {\r\n    throw new Error(\"Negative number are not supported\");\r\n  }\r\n\r\n  if (length < 60 && !opts.forceMinutes) {\r\n    return Math.floor(length).toString().padStart(2, \"0\") + \"s\";\r\n  }\r\n\r\n  if (length < 3600) {\r\n    return (\r\n      Math.floor(length / 60)\r\n        .toString()\r\n        .padStart(2, \"0\") +\r\n      \"m\" +\r\n      formatDuration(length % 60)\r\n    );\r\n  }\r\n\r\n  return (\r\n    Math.floor(length / 3600) +\r\n    \"h\" +\r\n    formatDuration(length % 3600, { forceMinutes: true })\r\n  );\r\n});\r\n","import { useState } from \"react\";\r\n\r\nexport default function useInput(\r\n  defaultValue: string = \"\"\r\n): [\r\n  string,\r\n  {\r\n    value: string;\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => unknown;\r\n  },\r\n  (value: string) => unknown\r\n] {\r\n  const [value, setValue] = useState<string>(defaultValue);\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const inputProps = {\r\n    value,\r\n    onChange,\r\n  };\r\n\r\n  return [value, inputProps, setValue];\r\n}\r\n","import React, { useState } from \"react\";\nimport { IPlaylist, Entries } from \"types\";\nimport { formatDuration } from \"helpers/time\";\n\ninterface BasisProps {\n  setVideo: (id: string) => unknown;\n  skipTo: (to: number) => unknown;\n}\n\ninterface PlaylistProps extends BasisProps {\n  entries: Entries<IPlaylist>;\n}\n\ninterface PlaylistVideoClipsProps extends BasisProps {\n  video: string;\n  clips: [number, number][];\n}\n\nexport default function Playlist(props: PlaylistProps) {\n  const { entries, setVideo, skipTo } = props;\n\n  return (\n    <>\n      {entries.map(([video, clips]) => (\n        <PlaylistVideoClips\n          video={video}\n          clips={clips}\n          setVideo={setVideo}\n          skipTo={skipTo}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction PlaylistVideoClips(props: PlaylistVideoClipsProps) {\n  const { video, clips, setVideo, skipTo } = props;\n  const [expanded, setExpanded] = useState<boolean>(false);\n\n  return (\n    <div className=\"Playlist--video\" key={video}>\n      <div>\n        <div>\n          <pre onClick={() => setVideo(video)}>{video}</pre> ({clips.length}{\" \"}\n          clips)\n        </div>\n        {clips.length !== 0 && (\n          <span\n            className=\"Playlist--video-expand\"\n            title={expanded ? \"Collapse\" : \"Expand\"}\n            onClick={() => setExpanded(!expanded)}\n          >\n            {expanded ? \"▼\" : \"▶\"}\n          </span>\n        )}\n      </div>\n\n      {expanded && (\n        <ul>\n          {clips.map((clip) => (\n            <li className=\"Playlist--clip\" key={clip[0] + \"_\" + clip[1]}>\n              <pre onClick={() => skipTo(clip[0])}>\n                {formatDuration(clip[0])}\n              </pre>{\" \"}\n              -{\" \"}\n              <pre onClick={() => skipTo(clip[1])}>\n                {formatDuration(clip[1])}\n              </pre>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { formatDuration } from \"helpers/time\";\n\ninterface CutterProps {\n  youtubeID: string;\n  setStart: () => unknown;\n  setEnd: () => unknown;\n  clipStart: number | undefined;\n  clipEnd: number | undefined;\n  skipTo: (x: number) => unknown;\n  done: () => unknown;\n}\n\nexport default function Cutter(props: CutterProps) {\n  const {\n    youtubeID,\n    setStart,\n    setEnd,\n    clipStart,\n    clipEnd,\n    skipTo,\n    done,\n  } = props;\n\n  return (\n    <div className=\"Cutter\">\n      <div className=\"Cutter--clippers\">\n        <button onClick={setStart}>Start clip here</button>\n\n        <div className=\"Cutter--boundaries\">\n          [\n          {clipStart ? (\n            <span onClick={() => skipTo(clipStart)}>\n              {formatDuration(clipStart)}\n            </span>\n          ) : (\n            \"?\"\n          )}\n          , {clipEnd ? formatDuration(clipEnd) : \"?\"}]\n        </div>\n\n        <button onClick={setEnd}>End clip here</button>\n      </div>\n\n      <div className=\"Cutter--add\">\n        <button\n          onClick={done}\n          disabled={\n            !youtubeID || !clipStart || !clipEnd || clipStart >= clipEnd\n          }\n        >\n          Add to playlist\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, {\n  useMemo,\n  useRef,\n  useState,\n  useCallback,\n  useEffect,\n} from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ReactPlayer from \"react-player\";\nimport { ICompilation, IPlaylist } from \"types\";\nimport { encode, decode } from \"helpers/payload\";\nimport useTitle from \"hooks/title\";\nimport useInput from \"hooks/input\";\nimport Playlist from \"./Playlist\";\nimport Cutter from \"./Cutter\";\nimport \"./style.css\";\n\nexport default function Editor() {\n  useTitle(\"Editor\");\n  const history = useHistory();\n  const { data: encodedData } = useParams();\n  const payload: ICompilation = useMemo(() => decode(encodedData), [\n    encodedData,\n  ]);\n  const [title, titleInput] = useInput(payload.data.title);\n  const [author, authorInput] = useInput(payload.data.author);\n  const [youtubeURL, youtubeInput, setYouTubeURL] = useInput();\n  const youtubeID = useMemo(() => getYoutubeIDFromURL(youtubeURL), [\n    youtubeURL,\n  ]);\n  const playerRef = useRef<ReactPlayer>(null);\n  const [clipStart, setClipStart] = useState<number | undefined>();\n  const [clipEnd, setClipEnd] = useState<number | undefined>();\n  const [playlist, setPlaylist] = useState<IPlaylist>(payload.data.playlist);\n  const playlistEntries = useMemo(() => Object.entries(playlist), [playlist]);\n\n  const setStart = useCallback(() => {\n    if (!playerRef.current) return;\n    setClipStart(playerRef.current.getCurrentTime());\n  }, [setClipStart]);\n\n  const setEnd = useCallback(() => {\n    if (!playerRef.current) return;\n    setClipEnd(playerRef.current.getCurrentTime());\n  }, [setClipEnd]);\n\n  const done = useCallback(() => {\n    if (!youtubeID || !clipStart || !clipEnd) {\n      return;\n    }\n\n    if (clipStart >= clipEnd) {\n      alert(\"Clip can't start after its end\");\n      return;\n    }\n\n    const newPlaylist = deepClone(playlist);\n    if (!newPlaylist[youtubeID]) newPlaylist[youtubeID] = [];\n\n    newPlaylist[youtubeID].push([clipStart, clipEnd]);\n    newPlaylist[youtubeID] = newPlaylist[youtubeID].sort((a, b) => a[0] - b[0]);\n    setPlaylist(newPlaylist);\n    setClipStart(undefined);\n    setClipEnd(undefined);\n  }, [youtubeID, playlist, clipStart, clipEnd]);\n\n  const currentPayload = useMemo(\n    () =>\n      encode({\n        version: \"1.0.0\",\n        data: {\n          title,\n          author,\n          playlist,\n        },\n      }),\n    [title, author, playlist]\n  );\n\n  useEffect(() => {\n    history.replace(\"/editor/\" + currentPayload);\n  }, [history, currentPayload]);\n\n  const currentURL = useMemo(\n    () =>\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      \"/#/compilation/\" +\n      currentPayload,\n    [currentPayload]\n  );\n\n  const setVideo = useCallback(\n    (id: string) => {\n      setYouTubeURL(\"https://youtube.com/watch?v=\" + id);\n    },\n    [setYouTubeURL]\n  );\n\n  const skipTo = useCallback((to: number) => {\n    playerRef.current?.seekTo(to);\n    (playerRef.current?.getInternalPlayer() as any)?.playVideo();\n  }, []);\n\n  return (\n    <div className=\"Editor\">\n      <div className=\"Editor--video\">\n        <div>\n          {youtubeID ? (\n            <div className=\"Editor--player\">\n              <ReactPlayer\n                ref={playerRef}\n                controls={true}\n                width={\"100%\"}\n                height={\"100%\"}\n                url={\"https://youtube.com/watch?v=\" + youtubeID}\n                config={{\n                  youtube: {\n                    playerVars: {\n                      showinfo: 0,\n                    },\n                  },\n                }}\n              />\n            </div>\n          ) : (\n            <div className=\"Editor--video-placeholder\">\n              <div>Enter a video first</div>\n            </div>\n          )}\n\n          <div className=\"Editor--video-input\">\n            <input\n              type=\"url\"\n              {...youtubeInput}\n              placeholder=\"Paste a YouTube video URL here\"\n            />\n            {!!youtubeURL.length && youtubeID === null && <span>&times;</span>}\n          </div>\n\n          {!!youtubeID && (\n            <Cutter\n              youtubeID={youtubeID}\n              setStart={setStart}\n              setEnd={setEnd}\n              clipStart={clipStart}\n              clipEnd={clipEnd}\n              skipTo={skipTo}\n              done={done}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"Editor--content\">\n        <div className=\"Editor--content-part\">\n          <h2>Details</h2>\n          <label>\n            <span>Title</span>\n            <input\n              type=\"text\"\n              {...titleInput}\n              placeholder=\"Compilation title\"\n            />\n          </label>\n          <label>\n            <span>Author</span>\n            <input type=\"text\" {...authorInput} placeholder=\"Your name\" />\n          </label>\n        </div>\n\n        <div className=\"Editor--content-part Editor--share\">\n          <h2>Share</h2>\n          <input type=\"text\" value={currentURL} readOnly={true} />\n        </div>\n\n        <div className=\"Editor--content-part\">\n          <h2>Playlist</h2>\n          {playlistEntries.length ? (\n            <Playlist\n              entries={playlistEntries}\n              setVideo={setVideo}\n              skipTo={skipTo}\n            />\n          ) : (\n            <div className=\"Editor--playlist-empty\">No clips added</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst YOUTUBE_URL_REGEX = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n\nfunction getYoutubeIDFromURL(url: string) {\n  const match = url.match(YOUTUBE_URL_REGEX);\n\n  if (match && match[2].length >= 11) {\n    return match[2];\n  }\n\n  return null;\n}\n\nfunction deepClone<T>(obj: T) {\n  return JSON.parse(JSON.stringify(obj)) as T;\n}\n"],"sourceRoot":""}