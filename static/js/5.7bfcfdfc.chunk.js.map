{"version":3,"sources":["hooks/title.ts","helpers/payload.ts","helpers/time.ts","hooks/input.ts","components/Editor/index.tsx"],"names":["useTitle","title","opts","useEffect","document","replace","hyphen","decode","encodedPayload","JSON","parse","atob","replacer","_","val","toFixed","Number","encode","payloadObj","btoa","stringify","formatDuration","memoize","length","Error","forceMinutes","Math","floor","toString","padStart","useInput","defaultValue","useState","value","setValue","onChange","e","target","inputProps","Editor","history","useHistory","encodedData","useParams","data","payload","useMemo","titleInput","author","authorInput","youtubeURL","youtubeInput","setYouTubeURL","youtubeID","url","match","YOUTUBE_URL_REGEX","getYoutubeIDFromURL","playerRef","useRef","clipStart","setClipStart","clipEnd","setClipEnd","playlist","setPlaylist","playlistEntries","Object","entries","setStart","useCallback","console","log","current","getCurrentTime","setEnd","done","alert","obj","newPlaylist","push","sort","a","b","undefined","currentPayload","version","currentURL","window","location","protocol","host","copyURL","navigator","clipboard","writeText","setVideo","id","skipTo","to","seekTo","getInternalPlayer","playVideo","className","type","placeholder","ref","controls","width","height","config","youtube","playerVars","showinfo","onClick","href","rel","map","video","clips","PlaylistVideoClips","props","expanded","setExpanded","key","disabled","clip"],"mappings":"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","file":"static/js/5.7bfcfdfc.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\n\r\ninterface TitleHookOpts {\r\n  hyphen?: boolean;\r\n  replace?: boolean;\r\n}\r\n\r\nexport default function useTitle(title?: string, opts: TitleHookOpts = {}) {\r\n  useEffect(() => {\r\n    document.title = !!title\r\n      ? (opts.replace ? \"\" : \"Bestoff \" + (opts.hyphen ? \"- \" : \"\")) + title\r\n      : \"Bestoff\";\r\n  }, [title, opts.hyphen, opts.replace]);\r\n}\r\n","export function decode(encodedPayload: string) {\n  return JSON.parse(atob(encodedPayload.replace(/_/g, \"/\").replace(/-/g, \"+\")));\n}\n\nconst replacer = (_: any, val: any) => {\n  return val.toFixed ? Number(val.toFixed(3)) : val;\n};\n\nexport function encode(payloadObj: object) {\n  return btoa(JSON.stringify(payloadObj, replacer))\n    .replace(/\\//g, \"_\")\n    .replace(/\\+/g, \"-\");\n}\n","import { memoize } from \"lodash\";\r\n\r\ninterface FormatDurationOpts {\r\n  forceMinutes?: boolean;\r\n}\r\n\r\nexport const formatDuration = memoize(function formatDuration(\r\n  length: number,\r\n  opts: FormatDurationOpts = {}\r\n): string {\r\n  if (length < 0) {\r\n    throw new Error(\"Negative number are not supported\");\r\n  }\r\n\r\n  if (length < 60 && !opts.forceMinutes) {\r\n    return Math.floor(length).toString().padStart(2, \"0\") + \"s\";\r\n  }\r\n\r\n  if (length < 3600) {\r\n    return (\r\n      Math.floor(length / 60)\r\n        .toString()\r\n        .padStart(2, \"0\") +\r\n      \"m\" +\r\n      formatDuration(length % 60)\r\n    );\r\n  }\r\n\r\n  return (\r\n    Math.floor(length / 3600) +\r\n    \"h\" +\r\n    formatDuration(length % 3600, { forceMinutes: true })\r\n  );\r\n});\r\n","import { useState } from \"react\";\r\n\r\nexport default function useInput(\r\n  defaultValue: string = \"\"\r\n): [\r\n  string,\r\n  {\r\n    value: string;\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => unknown;\r\n  },\r\n  (value: string) => unknown\r\n] {\r\n  const [value, setValue] = useState<string>(defaultValue);\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const inputProps = {\r\n    value,\r\n    onChange,\r\n  };\r\n\r\n  return [value, inputProps, setValue];\r\n}\r\n","import React, {\n  useMemo,\n  useRef,\n  useState,\n  useCallback,\n  useEffect,\n} from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ReactPlayer from \"react-player\";\nimport { ICompilation, IPlaylist } from \"types\";\nimport { formatDuration } from \"helpers/time\";\nimport { encode, decode } from \"helpers/payload\";\nimport useTitle from \"hooks/title\";\nimport useInput from \"hooks/input\";\nimport \"./style.css\";\n\nexport default function Editor() {\n  useTitle(\"Editor\");\n  const history = useHistory();\n  const { data: encodedData } = useParams();\n  const payload: ICompilation = useMemo(() => decode(encodedData), [\n    encodedData,\n  ]);\n  const [title, titleInput] = useInput(payload.data.title);\n  const [author, authorInput] = useInput(payload.data.author);\n  const [youtubeURL, youtubeInput, setYouTubeURL] = useInput();\n  const youtubeID = useMemo(() => getYoutubeIDFromURL(youtubeURL), [\n    youtubeURL,\n  ]);\n  const playerRef = useRef<ReactPlayer>(null);\n  const [clipStart, setClipStart] = useState<number | undefined>();\n  const [clipEnd, setClipEnd] = useState<number | undefined>();\n  const [playlist, setPlaylist] = useState<IPlaylist>(payload.data.playlist);\n  const playlistEntries = useMemo(() => Object.entries(playlist), [playlist]);\n\n  const setStart = useCallback(() => {\n    console.log(\"yes but\");\n    if (!playerRef.current) return;\n    console.log(\"yes??\");\n    setClipStart(playerRef.current.getCurrentTime());\n  }, [setClipStart]);\n\n  const setEnd = useCallback(() => {\n    if (!playerRef.current) return;\n    setClipEnd(playerRef.current.getCurrentTime());\n  }, [setClipEnd]);\n\n  const done = useCallback(() => {\n    if (!youtubeID || !clipStart || !clipEnd) {\n      return;\n    }\n    if (clipStart >= clipEnd) {\n      alert(\"Clip can't start after its end\");\n      return;\n    }\n    const newPlaylist = deepClone(playlist);\n    if (!newPlaylist[youtubeID]) newPlaylist[youtubeID] = [];\n\n    newPlaylist[youtubeID].push([clipStart, clipEnd]);\n    newPlaylist[youtubeID] = newPlaylist[youtubeID].sort((a, b) => a[0] - b[0]);\n    setPlaylist(newPlaylist);\n    setClipStart(undefined);\n    setClipEnd(undefined);\n  }, [youtubeID, playlist, clipStart, clipEnd]);\n\n  const currentPayload = useMemo(\n    () =>\n      encode({\n        version: \"1.0.0\",\n        data: {\n          title,\n          author,\n          playlist,\n        },\n      }),\n    [title, author, playlist]\n  );\n\n  useEffect(() => {\n    history.replace(\"/editor/\" + currentPayload);\n  }, [history, currentPayload]);\n\n  const currentURL = useMemo(\n    () =>\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      \"/#/compilation/\" +\n      currentPayload,\n    [currentPayload]\n  );\n\n  const copyURL = useCallback(() => {\n    navigator.clipboard.writeText(currentURL);\n  }, [currentURL]);\n\n  const setVideo = useCallback(\n    (id: string) => {\n      setYouTubeURL(\"https://youtube.com/watch?v=\" + id);\n    },\n    [setYouTubeURL]\n  );\n\n  const skipTo = useCallback((to: number) => {\n    playerRef.current?.seekTo(to);\n    (playerRef.current?.getInternalPlayer() as any)?.playVideo();\n  }, []);\n\n  return (\n    <div className=\"Editor\">\n      <div className=\"Editor--video\">\n        <div>\n          <div className=\"Editor--video-input\">\n            <input\n              type=\"url\"\n              {...youtubeInput}\n              placeholder=\"Paste a YouTube video URL here\"\n            />\n            {!!youtubeURL.length && youtubeID === null && <span>&times;</span>}\n          </div>\n          {youtubeID ? (\n            <>\n              <div className=\"Editor--player\">\n                <ReactPlayer\n                  ref={playerRef}\n                  controls={true}\n                  width={\"100%\"}\n                  height={\"100%\"}\n                  url={\"https://youtube.com/watch?v=\" + youtubeID}\n                  config={{\n                    youtube: {\n                      playerVars: {\n                        showinfo: 0,\n                      },\n                    },\n                  }}\n                />\n              </div>\n\n              <div className=\"Editor--clippers\">\n                <button onClick={setStart}>Start clip here</button>\n\n                <div className=\"Editor--boundaries\">\n                  [\n                  {clipStart ? (\n                    <span onClick={() => skipTo(clipStart)}>\n                      {formatDuration(clipStart)}\n                    </span>\n                  ) : (\n                    \"?\"\n                  )}\n                  , {clipEnd ? formatDuration(clipEnd) : \"?\"}]\n                </div>\n\n                <button onClick={setEnd}>End clip here</button>\n              </div>\n\n              <div className=\"Editor--add\">\n                <button onClick={done}>Add to playlist</button>\n              </div>\n            </>\n          ) : (\n            <div className=\"Editor--video-placeholder\">\n              <div>Enter a video first</div>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"Editor--content\">\n        <div className=\"Editor--content-part\">\n          <h2>Details</h2>\n          <label>\n            <span>Title</span>\n            <input\n              type=\"text\"\n              {...titleInput}\n              placeholder=\"Compilation title\"\n            />\n          </label>\n          <label>\n            <span>Author</span>\n            <input type=\"text\" {...authorInput} placeholder=\"Your name\" />\n          </label>\n        </div>\n        <div className=\"Editor--content-part Editor--share\">\n          <h2>Share</h2>\n          <input type=\"text\" value={currentURL} />{\" \"}\n          <div>\n            <button onClick={copyURL}>Copy URL</button>{\" \"}\n            <a href={currentURL} target=\"_blank\" rel=\"noopener noreferrer\">\n              Open\n            </a>\n          </div>\n        </div>\n        <div className=\"Editor--content-part\">\n          <h2>Playlist</h2>\n          {playlistEntries.length ? (\n            playlistEntries.map(([video, clips]) => (\n              <PlaylistVideoClips\n                video={video}\n                clips={clips}\n                setVideo={setVideo}\n                skipTo={skipTo}\n              />\n            ))\n          ) : (\n            <div className=\"Editor--playlist-empty\">No clips added</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface PlaylistVideoClipsProps {\n  video: string;\n  clips: Array<[number, number]>;\n  setVideo: (id: string) => unknown;\n  skipTo: (to: number) => unknown;\n}\n\nfunction PlaylistVideoClips(props: PlaylistVideoClipsProps) {\n  const { video, clips, setVideo, skipTo } = props;\n  const [expanded, setExpanded] = useState<boolean>(false);\n\n  return (\n    <div className=\"Editor--playlist-video\" key={video}>\n      <div>\n        <div>\n          <pre onClick={() => setVideo(video)}>{video}</pre> ({clips.length}{\" \"}\n          clips)\n        </div>\n        <button\n          onClick={() => setExpanded(!expanded)}\n          disabled={clips.length === 0}\n        >\n          {expanded ? \"-\" : \"+\"}\n        </button>\n      </div>\n\n      {expanded && (\n        <ul>\n          {clips.map((clip) => (\n            <li className=\"Editor--playlist-clip\" key={clip[0] + \"_\" + clip[1]}>\n              <pre onClick={() => skipTo(clip[0])}>\n                {formatDuration(clip[0])}\n              </pre>{\" \"}\n              -{\" \"}\n              <pre onClick={() => skipTo(clip[1])}>\n                {formatDuration(clip[1])}\n              </pre>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nconst YOUTUBE_URL_REGEX = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n\nfunction getYoutubeIDFromURL(url: string) {\n  const match = url.match(YOUTUBE_URL_REGEX);\n\n  if (match && match[2].length >= 11) {\n    return match[2];\n  }\n\n  return null;\n}\n\nfunction deepClone<T>(obj: T) {\n  return JSON.parse(JSON.stringify(obj)) as T;\n}\n"],"sourceRoot":""}